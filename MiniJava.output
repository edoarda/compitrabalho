State 130 conflicts: 6 shift/reduce
State 131 conflicts: 5 shift/reduce
State 138 conflicts: 1 shift/reduce


Grammar

    0 $accept: PROG $end

    1 PROG: MAIN CLASSE

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' Id ')' '{' CMD '}' '}'

    3 CLASSE: Class Id Extends Id '{' VARLIST METODOLIST '}'
    4       | Class Id '{' VARLIST METODOLIST '}'

    5 VARLIST: VARLIST VAR
    6        | /* empty */

    7 VAR: TIPO Id ';'

    8 METODOLIST: METODOLIST METODO
    9           | /* empty */

   10 METODO: Public TIPO Id '(' PARAM ')' '{' VARLIST CMD Return EXP ';' '}'

   11 PARAM: PARAM ',' TIPO Id
   12      | TIPO Id
   13      | /* empty */

   14 TIPO: Int '[' ']'
   15     | Boolean
   16     | Int
   17     | Id

   18 CMDLIST: CMDLIST CMD
   19        | /* empty */

   20 CMD: '{' CMDLIST '}'
   21    | If '(' EXP ')' CMDLIST
   22    | If '(' EXP ')' CMDLIST Else CMD
   23    | While '(' EXP ')' CMDLIST
   24    | Sout '(' EXP ')' ';'
   25    | Id '=' EXP ';'
   26    | Id '[' EXP ']' '=' EXP ';'

   27 EXP: EXP eLogico REXP
   28    | REXP

   29 REXP: REXP '<' AEXP
   30     | REXP igual AEXP
   31     | REXP diferente AEXP
   32     | AEXP

   33 AEXP: AEXP '+' MEXP
   34     | AEXP '-' MEXP
   35     | MEXP

   36 MEXP: MEXP '*' SEXP
   37     | MEXP '/' SEXP
   38     | SEXP

   39 SEXP: '!' SEXP
   40     | '-' SEXP
   41     | True
   42     | False
   43     | num
   44     | Null
   45     | New Int '[' EXP ']'
   46     | PEXP '.' Length
   47     | PEXP '[' EXP ']'
   48     | PEXP

   49 PEXP: Id
   50     | This
   51     | New Id '(' ')'
   52     | '(' EXP ')'
   53     | PEXP '.' Id
   54     | PEXP '.' Id '(' EXPS ')'
   55     | PEXP '.' Id '(' ')'

   56 EXPS: EXPS ',' EXP
   57     | EXP
   58     | /* empty */


Terminals, with rules where they appear

$end (0) 0
'!' (33) 39
'(' (40) 2 10 21 22 23 24 51 52 54 55
')' (41) 2 10 21 22 23 24 51 52 54 55
'*' (42) 36
'+' (43) 33
',' (44) 11 56
'-' (45) 34 40
'.' (46) 46 53 54 55
'/' (47) 37
';' (59) 7 10 24 25 26
'<' (60) 29
'=' (61) 25 26
'[' (91) 2 14 26 45 47
']' (93) 2 14 26 45 47
'{' (123) 2 3 4 10 20
'}' (125) 2 3 4 10 20
error (256)
num (258) 43
Id (259) 2 3 4 7 10 11 12 17 25 26 49 51 53 54 55
Boolean (260) 15
Class (261) 2 3 4
Extends (262) 3
Public (263) 2 10
Static (264) 2
Void (265) 2
Main (266) 2
String (267) 2
Return (268) 10
Int (269) 14 16 45
If (270) 21 22
Else (271) 22
While (272) 23
Sout (273) 24
Length (274) 46
True (275) 41
False (276) 42
This (277) 50
New (278) 45 51
Null (279) 44
igual (280) 30
diferente (281) 31
eLogico (282) 27


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
PROG (45)
    on left: 1, on right: 0
MAIN (46)
    on left: 2, on right: 1
CLASSE (47)
    on left: 3 4, on right: 1
VARLIST (48)
    on left: 5 6, on right: 3 4 5 10
VAR (49)
    on left: 7, on right: 5
METODOLIST (50)
    on left: 8 9, on right: 3 4 8
METODO (51)
    on left: 10, on right: 8
PARAM (52)
    on left: 11 12 13, on right: 10 11
TIPO (53)
    on left: 14 15 16 17, on right: 7 10 11 12
CMDLIST (54)
    on left: 18 19, on right: 18 20 21 22 23
CMD (55)
    on left: 20 21 22 23 24 25 26, on right: 2 10 18 22
EXP (56)
    on left: 27 28, on right: 10 21 22 23 24 25 26 27 45 47 52 56 57
REXP (57)
    on left: 29 30 31 32, on right: 27 28 29 30 31
AEXP (58)
    on left: 33 34 35, on right: 29 30 31 32 33 34
MEXP (59)
    on left: 36 37 38, on right: 33 34 35 36 37
SEXP (60)
    on left: 39 40 41 42 43 44 45 46 47 48, on right: 36 37 38 39 40
PEXP (61)
    on left: 49 50 51 52 53 54 55, on right: 46 47 48 53 54 55
EXPS (62)
    on left: 56 57 58, on right: 54 56


state 0

    0 $accept: . PROG $end

    Class  shift, and go to state 1

    PROG  go to state 2
    MAIN  go to state 3


state 1

    2 MAIN: Class . Id '{' Public Static Void Main '(' String '[' ']' Id ')' '{' CMD '}' '}'

    Id  shift, and go to state 4


state 2

    0 $accept: PROG . $end

    $end  shift, and go to state 5


state 3

    1 PROG: MAIN . CLASSE

    Class  shift, and go to state 6

    CLASSE  go to state 7


state 4

    2 MAIN: Class Id . '{' Public Static Void Main '(' String '[' ']' Id ')' '{' CMD '}' '}'

    '{'  shift, and go to state 8


state 5

    0 $accept: PROG $end .

    $default  accept


state 6

    3 CLASSE: Class . Id Extends Id '{' VARLIST METODOLIST '}'
    4       | Class . Id '{' VARLIST METODOLIST '}'

    Id  shift, and go to state 9


state 7

    1 PROG: MAIN CLASSE .

    $default  reduce using rule 1 (PROG)


state 8

    2 MAIN: Class Id '{' . Public Static Void Main '(' String '[' ']' Id ')' '{' CMD '}' '}'

    Public  shift, and go to state 10


state 9

    3 CLASSE: Class Id . Extends Id '{' VARLIST METODOLIST '}'
    4       | Class Id . '{' VARLIST METODOLIST '}'

    Extends  shift, and go to state 11
    '{'      shift, and go to state 12


state 10

    2 MAIN: Class Id '{' Public . Static Void Main '(' String '[' ']' Id ')' '{' CMD '}' '}'

    Static  shift, and go to state 13


state 11

    3 CLASSE: Class Id Extends . Id '{' VARLIST METODOLIST '}'

    Id  shift, and go to state 14


state 12

    4 CLASSE: Class Id '{' . VARLIST METODOLIST '}'

    $default  reduce using rule 6 (VARLIST)

    VARLIST  go to state 15


state 13

    2 MAIN: Class Id '{' Public Static . Void Main '(' String '[' ']' Id ')' '{' CMD '}' '}'

    Void  shift, and go to state 16


state 14

    3 CLASSE: Class Id Extends Id . '{' VARLIST METODOLIST '}'

    '{'  shift, and go to state 17


state 15

    4 CLASSE: Class Id '{' VARLIST . METODOLIST '}'
    5 VARLIST: VARLIST . VAR

    Id       shift, and go to state 18
    Boolean  shift, and go to state 19
    Int      shift, and go to state 20

    $default  reduce using rule 9 (METODOLIST)

    VAR         go to state 21
    METODOLIST  go to state 22
    TIPO        go to state 23


state 16

    2 MAIN: Class Id '{' Public Static Void . Main '(' String '[' ']' Id ')' '{' CMD '}' '}'

    Main  shift, and go to state 24


state 17

    3 CLASSE: Class Id Extends Id '{' . VARLIST METODOLIST '}'

    $default  reduce using rule 6 (VARLIST)

    VARLIST  go to state 25


state 18

   17 TIPO: Id .

    $default  reduce using rule 17 (TIPO)


state 19

   15 TIPO: Boolean .

    $default  reduce using rule 15 (TIPO)


state 20

   14 TIPO: Int . '[' ']'
   16     | Int .

    '['  shift, and go to state 26

    $default  reduce using rule 16 (TIPO)


state 21

    5 VARLIST: VARLIST VAR .

    $default  reduce using rule 5 (VARLIST)


state 22

    4 CLASSE: Class Id '{' VARLIST METODOLIST . '}'
    8 METODOLIST: METODOLIST . METODO

    Public  shift, and go to state 27
    '}'     shift, and go to state 28

    METODO  go to state 29


state 23

    7 VAR: TIPO . Id ';'

    Id  shift, and go to state 30


state 24

    2 MAIN: Class Id '{' Public Static Void Main . '(' String '[' ']' Id ')' '{' CMD '}' '}'

    '('  shift, and go to state 31


state 25

    3 CLASSE: Class Id Extends Id '{' VARLIST . METODOLIST '}'
    5 VARLIST: VARLIST . VAR

    Id       shift, and go to state 18
    Boolean  shift, and go to state 19
    Int      shift, and go to state 20

    $default  reduce using rule 9 (METODOLIST)

    VAR         go to state 21
    METODOLIST  go to state 32
    TIPO        go to state 23


state 26

   14 TIPO: Int '[' . ']'

    ']'  shift, and go to state 33


state 27

   10 METODO: Public . TIPO Id '(' PARAM ')' '{' VARLIST CMD Return EXP ';' '}'

    Id       shift, and go to state 18
    Boolean  shift, and go to state 19
    Int      shift, and go to state 20

    TIPO  go to state 34


state 28

    4 CLASSE: Class Id '{' VARLIST METODOLIST '}' .

    $default  reduce using rule 4 (CLASSE)


state 29

    8 METODOLIST: METODOLIST METODO .

    $default  reduce using rule 8 (METODOLIST)


state 30

    7 VAR: TIPO Id . ';'

    ';'  shift, and go to state 35


state 31

    2 MAIN: Class Id '{' Public Static Void Main '(' . String '[' ']' Id ')' '{' CMD '}' '}'

    String  shift, and go to state 36


state 32

    3 CLASSE: Class Id Extends Id '{' VARLIST METODOLIST . '}'
    8 METODOLIST: METODOLIST . METODO

    Public  shift, and go to state 27
    '}'     shift, and go to state 37

    METODO  go to state 29


state 33

   14 TIPO: Int '[' ']' .

    $default  reduce using rule 14 (TIPO)


state 34

   10 METODO: Public TIPO . Id '(' PARAM ')' '{' VARLIST CMD Return EXP ';' '}'

    Id  shift, and go to state 38


state 35

    7 VAR: TIPO Id ';' .

    $default  reduce using rule 7 (VAR)


state 36

    2 MAIN: Class Id '{' Public Static Void Main '(' String . '[' ']' Id ')' '{' CMD '}' '}'

    '['  shift, and go to state 39


state 37

    3 CLASSE: Class Id Extends Id '{' VARLIST METODOLIST '}' .

    $default  reduce using rule 3 (CLASSE)


state 38

   10 METODO: Public TIPO Id . '(' PARAM ')' '{' VARLIST CMD Return EXP ';' '}'

    '('  shift, and go to state 40


state 39

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' . ']' Id ')' '{' CMD '}' '}'

    ']'  shift, and go to state 41


state 40

   10 METODO: Public TIPO Id '(' . PARAM ')' '{' VARLIST CMD Return EXP ';' '}'

    Id       shift, and go to state 18
    Boolean  shift, and go to state 19
    Int      shift, and go to state 20

    $default  reduce using rule 13 (PARAM)

    PARAM  go to state 42
    TIPO   go to state 43


state 41

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' . Id ')' '{' CMD '}' '}'

    Id  shift, and go to state 44


state 42

   10 METODO: Public TIPO Id '(' PARAM . ')' '{' VARLIST CMD Return EXP ';' '}'
   11 PARAM: PARAM . ',' TIPO Id

    ')'  shift, and go to state 45
    ','  shift, and go to state 46


state 43

   12 PARAM: TIPO . Id

    Id  shift, and go to state 47


state 44

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' Id . ')' '{' CMD '}' '}'

    ')'  shift, and go to state 48


state 45

   10 METODO: Public TIPO Id '(' PARAM ')' . '{' VARLIST CMD Return EXP ';' '}'

    '{'  shift, and go to state 49


state 46

   11 PARAM: PARAM ',' . TIPO Id

    Id       shift, and go to state 18
    Boolean  shift, and go to state 19
    Int      shift, and go to state 20

    TIPO  go to state 50


state 47

   12 PARAM: TIPO Id .

    $default  reduce using rule 12 (PARAM)


state 48

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' Id ')' . '{' CMD '}' '}'

    '{'  shift, and go to state 51


state 49

   10 METODO: Public TIPO Id '(' PARAM ')' '{' . VARLIST CMD Return EXP ';' '}'

    $default  reduce using rule 6 (VARLIST)

    VARLIST  go to state 52


state 50

   11 PARAM: PARAM ',' TIPO . Id

    Id  shift, and go to state 53


state 51

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' Id ')' '{' . CMD '}' '}'

    Id     shift, and go to state 54
    If     shift, and go to state 55
    While  shift, and go to state 56
    Sout   shift, and go to state 57
    '{'    shift, and go to state 58

    CMD  go to state 59


state 52

    5 VARLIST: VARLIST . VAR
   10 METODO: Public TIPO Id '(' PARAM ')' '{' VARLIST . CMD Return EXP ';' '}'

    Id       shift, and go to state 60
    Boolean  shift, and go to state 19
    Int      shift, and go to state 20
    If       shift, and go to state 55
    While    shift, and go to state 56
    Sout     shift, and go to state 57
    '{'      shift, and go to state 58

    VAR   go to state 21
    TIPO  go to state 23
    CMD   go to state 61


state 53

   11 PARAM: PARAM ',' TIPO Id .

    $default  reduce using rule 11 (PARAM)


state 54

   25 CMD: Id . '=' EXP ';'
   26    | Id . '[' EXP ']' '=' EXP ';'

    '['  shift, and go to state 62
    '='  shift, and go to state 63


state 55

   21 CMD: If . '(' EXP ')' CMDLIST
   22    | If . '(' EXP ')' CMDLIST Else CMD

    '('  shift, and go to state 64


state 56

   23 CMD: While . '(' EXP ')' CMDLIST

    '('  shift, and go to state 65


state 57

   24 CMD: Sout . '(' EXP ')' ';'

    '('  shift, and go to state 66


state 58

   20 CMD: '{' . CMDLIST '}'

    $default  reduce using rule 19 (CMDLIST)

    CMDLIST  go to state 67


state 59

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' Id ')' '{' CMD . '}' '}'

    '}'  shift, and go to state 68


state 60

   17 TIPO: Id .
   25 CMD: Id . '=' EXP ';'
   26    | Id . '[' EXP ']' '=' EXP ';'

    '['  shift, and go to state 62
    '='  shift, and go to state 63

    $default  reduce using rule 17 (TIPO)


state 61

   10 METODO: Public TIPO Id '(' PARAM ')' '{' VARLIST CMD . Return EXP ';' '}'

    Return  shift, and go to state 69


state 62

   26 CMD: Id '[' . EXP ']' '=' EXP ';'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 80
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 63

   25 CMD: Id '=' . EXP ';'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 86
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 64

   21 CMD: If '(' . EXP ')' CMDLIST
   22    | If '(' . EXP ')' CMDLIST Else CMD

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 87
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 65

   23 CMD: While '(' . EXP ')' CMDLIST

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 88
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 66

   24 CMD: Sout '(' . EXP ')' ';'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 89
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 67

   18 CMDLIST: CMDLIST . CMD
   20 CMD: '{' CMDLIST . '}'

    Id     shift, and go to state 54
    If     shift, and go to state 55
    While  shift, and go to state 56
    Sout   shift, and go to state 57
    '{'    shift, and go to state 58
    '}'    shift, and go to state 90

    CMD  go to state 91


state 68

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' Id ')' '{' CMD '}' . '}'

    '}'  shift, and go to state 92


state 69

   10 METODO: Public TIPO Id '(' PARAM ')' '{' VARLIST CMD Return . EXP ';' '}'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 93
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 70

   43 SEXP: num .

    $default  reduce using rule 43 (SEXP)


state 71

   49 PEXP: Id .

    $default  reduce using rule 49 (PEXP)


state 72

   41 SEXP: True .

    $default  reduce using rule 41 (SEXP)


state 73

   42 SEXP: False .

    $default  reduce using rule 42 (SEXP)


state 74

   50 PEXP: This .

    $default  reduce using rule 50 (PEXP)


state 75

   45 SEXP: New . Int '[' EXP ']'
   51 PEXP: New . Id '(' ')'

    Id   shift, and go to state 94
    Int  shift, and go to state 95


state 76

   44 SEXP: Null .

    $default  reduce using rule 44 (SEXP)


state 77

   52 PEXP: '(' . EXP ')'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 96
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 78

   40 SEXP: '-' . SEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    SEXP  go to state 97
    PEXP  go to state 85


state 79

   39 SEXP: '!' . SEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    SEXP  go to state 98
    PEXP  go to state 85


state 80

   26 CMD: Id '[' EXP . ']' '=' EXP ';'
   27 EXP: EXP . eLogico REXP

    eLogico  shift, and go to state 99
    ']'      shift, and go to state 100


state 81

   28 EXP: REXP .
   29 REXP: REXP . '<' AEXP
   30     | REXP . igual AEXP
   31     | REXP . diferente AEXP

    igual      shift, and go to state 101
    diferente  shift, and go to state 102
    '<'        shift, and go to state 103

    $default  reduce using rule 28 (EXP)


state 82

   32 REXP: AEXP .
   33 AEXP: AEXP . '+' MEXP
   34     | AEXP . '-' MEXP

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105

    $default  reduce using rule 32 (REXP)


state 83

   35 AEXP: MEXP .
   36 MEXP: MEXP . '*' SEXP
   37     | MEXP . '/' SEXP

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107

    $default  reduce using rule 35 (AEXP)


state 84

   38 MEXP: SEXP .

    $default  reduce using rule 38 (MEXP)


state 85

   46 SEXP: PEXP . '.' Length
   47     | PEXP . '[' EXP ']'
   48     | PEXP .
   53 PEXP: PEXP . '.' Id
   54     | PEXP . '.' Id '(' EXPS ')'
   55     | PEXP . '.' Id '(' ')'

    '['  shift, and go to state 108
    '.'  shift, and go to state 109

    $default  reduce using rule 48 (SEXP)


state 86

   25 CMD: Id '=' EXP . ';'
   27 EXP: EXP . eLogico REXP

    eLogico  shift, and go to state 99
    ';'      shift, and go to state 110


state 87

   21 CMD: If '(' EXP . ')' CMDLIST
   22    | If '(' EXP . ')' CMDLIST Else CMD
   27 EXP: EXP . eLogico REXP

    eLogico  shift, and go to state 99
    ')'      shift, and go to state 111


state 88

   23 CMD: While '(' EXP . ')' CMDLIST
   27 EXP: EXP . eLogico REXP

    eLogico  shift, and go to state 99
    ')'      shift, and go to state 112


state 89

   24 CMD: Sout '(' EXP . ')' ';'
   27 EXP: EXP . eLogico REXP

    eLogico  shift, and go to state 99
    ')'      shift, and go to state 113


state 90

   20 CMD: '{' CMDLIST '}' .

    $default  reduce using rule 20 (CMD)


state 91

   18 CMDLIST: CMDLIST CMD .

    $default  reduce using rule 18 (CMDLIST)


state 92

    2 MAIN: Class Id '{' Public Static Void Main '(' String '[' ']' Id ')' '{' CMD '}' '}' .

    $default  reduce using rule 2 (MAIN)


state 93

   10 METODO: Public TIPO Id '(' PARAM ')' '{' VARLIST CMD Return EXP . ';' '}'
   27 EXP: EXP . eLogico REXP

    eLogico  shift, and go to state 99
    ';'      shift, and go to state 114


state 94

   51 PEXP: New Id . '(' ')'

    '('  shift, and go to state 115


state 95

   45 SEXP: New Int . '[' EXP ']'

    '['  shift, and go to state 116


state 96

   27 EXP: EXP . eLogico REXP
   52 PEXP: '(' EXP . ')'

    eLogico  shift, and go to state 99
    ')'      shift, and go to state 117


state 97

   40 SEXP: '-' SEXP .

    $default  reduce using rule 40 (SEXP)


state 98

   39 SEXP: '!' SEXP .

    $default  reduce using rule 39 (SEXP)


state 99

   27 EXP: EXP eLogico . REXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    REXP  go to state 118
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 100

   26 CMD: Id '[' EXP ']' . '=' EXP ';'

    '='  shift, and go to state 119


state 101

   30 REXP: REXP igual . AEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    AEXP  go to state 120
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 102

   31 REXP: REXP diferente . AEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    AEXP  go to state 121
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 103

   29 REXP: REXP '<' . AEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    AEXP  go to state 122
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 104

   33 AEXP: AEXP '+' . MEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    MEXP  go to state 123
    SEXP  go to state 84
    PEXP  go to state 85


state 105

   34 AEXP: AEXP '-' . MEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    MEXP  go to state 124
    SEXP  go to state 84
    PEXP  go to state 85


state 106

   36 MEXP: MEXP '*' . SEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    SEXP  go to state 125
    PEXP  go to state 85


state 107

   37 MEXP: MEXP '/' . SEXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    SEXP  go to state 126
    PEXP  go to state 85


state 108

   47 SEXP: PEXP '[' . EXP ']'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 127
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 109

   46 SEXP: PEXP '.' . Length
   53 PEXP: PEXP '.' . Id
   54     | PEXP '.' . Id '(' EXPS ')'
   55     | PEXP '.' . Id '(' ')'

    Id      shift, and go to state 128
    Length  shift, and go to state 129


state 110

   25 CMD: Id '=' EXP ';' .

    $default  reduce using rule 25 (CMD)


state 111

   21 CMD: If '(' EXP ')' . CMDLIST
   22    | If '(' EXP ')' . CMDLIST Else CMD

    $default  reduce using rule 19 (CMDLIST)

    CMDLIST  go to state 130


state 112

   23 CMD: While '(' EXP ')' . CMDLIST

    $default  reduce using rule 19 (CMDLIST)

    CMDLIST  go to state 131


state 113

   24 CMD: Sout '(' EXP ')' . ';'

    ';'  shift, and go to state 132


state 114

   10 METODO: Public TIPO Id '(' PARAM ')' '{' VARLIST CMD Return EXP ';' . '}'

    '}'  shift, and go to state 133


state 115

   51 PEXP: New Id '(' . ')'

    ')'  shift, and go to state 134


state 116

   45 SEXP: New Int '[' . EXP ']'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 135
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 117

   52 PEXP: '(' EXP ')' .

    $default  reduce using rule 52 (PEXP)


state 118

   27 EXP: EXP eLogico REXP .
   29 REXP: REXP . '<' AEXP
   30     | REXP . igual AEXP
   31     | REXP . diferente AEXP

    igual      shift, and go to state 101
    diferente  shift, and go to state 102
    '<'        shift, and go to state 103

    $default  reduce using rule 27 (EXP)


state 119

   26 CMD: Id '[' EXP ']' '=' . EXP ';'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 136
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 120

   30 REXP: REXP igual AEXP .
   33 AEXP: AEXP . '+' MEXP
   34     | AEXP . '-' MEXP

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105

    $default  reduce using rule 30 (REXP)


state 121

   31 REXP: REXP diferente AEXP .
   33 AEXP: AEXP . '+' MEXP
   34     | AEXP . '-' MEXP

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105

    $default  reduce using rule 31 (REXP)


state 122

   29 REXP: REXP '<' AEXP .
   33 AEXP: AEXP . '+' MEXP
   34     | AEXP . '-' MEXP

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105

    $default  reduce using rule 29 (REXP)


state 123

   33 AEXP: AEXP '+' MEXP .
   36 MEXP: MEXP . '*' SEXP
   37     | MEXP . '/' SEXP

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107

    $default  reduce using rule 33 (AEXP)


state 124

   34 AEXP: AEXP '-' MEXP .
   36 MEXP: MEXP . '*' SEXP
   37     | MEXP . '/' SEXP

    '*'  shift, and go to state 106
    '/'  shift, and go to state 107

    $default  reduce using rule 34 (AEXP)


state 125

   36 MEXP: MEXP '*' SEXP .

    $default  reduce using rule 36 (MEXP)


state 126

   37 MEXP: MEXP '/' SEXP .

    $default  reduce using rule 37 (MEXP)


state 127

   27 EXP: EXP . eLogico REXP
   47 SEXP: PEXP '[' EXP . ']'

    eLogico  shift, and go to state 99
    ']'      shift, and go to state 137


state 128

   53 PEXP: PEXP '.' Id .
   54     | PEXP '.' Id . '(' EXPS ')'
   55     | PEXP '.' Id . '(' ')'

    '('  shift, and go to state 138

    $default  reduce using rule 53 (PEXP)


state 129

   46 SEXP: PEXP '.' Length .

    $default  reduce using rule 46 (SEXP)


state 130

   18 CMDLIST: CMDLIST . CMD
   21 CMD: If '(' EXP ')' CMDLIST .
   22    | If '(' EXP ')' CMDLIST . Else CMD

    Id     shift, and go to state 54
    If     shift, and go to state 55
    Else   shift, and go to state 139
    While  shift, and go to state 56
    Sout   shift, and go to state 57
    '{'    shift, and go to state 58

    Id        [reduce using rule 21 (CMD)]
    If        [reduce using rule 21 (CMD)]
    Else      [reduce using rule 21 (CMD)]
    While     [reduce using rule 21 (CMD)]
    Sout      [reduce using rule 21 (CMD)]
    '{'       [reduce using rule 21 (CMD)]
    $default  reduce using rule 21 (CMD)

    CMD  go to state 91


state 131

   18 CMDLIST: CMDLIST . CMD
   23 CMD: While '(' EXP ')' CMDLIST .

    Id     shift, and go to state 54
    If     shift, and go to state 55
    While  shift, and go to state 56
    Sout   shift, and go to state 57
    '{'    shift, and go to state 58

    Id        [reduce using rule 23 (CMD)]
    If        [reduce using rule 23 (CMD)]
    While     [reduce using rule 23 (CMD)]
    Sout      [reduce using rule 23 (CMD)]
    '{'       [reduce using rule 23 (CMD)]
    $default  reduce using rule 23 (CMD)

    CMD  go to state 91


state 132

   24 CMD: Sout '(' EXP ')' ';' .

    $default  reduce using rule 24 (CMD)


state 133

   10 METODO: Public TIPO Id '(' PARAM ')' '{' VARLIST CMD Return EXP ';' '}' .

    $default  reduce using rule 10 (METODO)


state 134

   51 PEXP: New Id '(' ')' .

    $default  reduce using rule 51 (PEXP)


state 135

   27 EXP: EXP . eLogico REXP
   45 SEXP: New Int '[' EXP . ']'

    eLogico  shift, and go to state 99
    ']'      shift, and go to state 140


state 136

   26 CMD: Id '[' EXP ']' '=' EXP . ';'
   27 EXP: EXP . eLogico REXP

    eLogico  shift, and go to state 99
    ';'      shift, and go to state 141


state 137

   47 SEXP: PEXP '[' EXP ']' .

    $default  reduce using rule 47 (SEXP)


state 138

   54 PEXP: PEXP '.' Id '(' . EXPS ')'
   55     | PEXP '.' Id '(' . ')'

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    ')'    shift, and go to state 142
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    ')'       [reduce using rule 58 (EXPS)]
    $default  reduce using rule 58 (EXPS)

    EXP   go to state 143
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85
    EXPS  go to state 144


state 139

   22 CMD: If '(' EXP ')' CMDLIST Else . CMD

    Id     shift, and go to state 54
    If     shift, and go to state 55
    While  shift, and go to state 56
    Sout   shift, and go to state 57
    '{'    shift, and go to state 58

    CMD  go to state 145


state 140

   45 SEXP: New Int '[' EXP ']' .

    $default  reduce using rule 45 (SEXP)


state 141

   26 CMD: Id '[' EXP ']' '=' EXP ';' .

    $default  reduce using rule 26 (CMD)


state 142

   55 PEXP: PEXP '.' Id '(' ')' .

    $default  reduce using rule 55 (PEXP)


state 143

   27 EXP: EXP . eLogico REXP
   57 EXPS: EXP .

    eLogico  shift, and go to state 99

    $default  reduce using rule 57 (EXPS)


state 144

   54 PEXP: PEXP '.' Id '(' EXPS . ')'
   56 EXPS: EXPS . ',' EXP

    ')'  shift, and go to state 146
    ','  shift, and go to state 147


state 145

   22 CMD: If '(' EXP ')' CMDLIST Else CMD .

    $default  reduce using rule 22 (CMD)


state 146

   54 PEXP: PEXP '.' Id '(' EXPS ')' .

    $default  reduce using rule 54 (PEXP)


state 147

   56 EXPS: EXPS ',' . EXP

    num    shift, and go to state 70
    Id     shift, and go to state 71
    True   shift, and go to state 72
    False  shift, and go to state 73
    This   shift, and go to state 74
    New    shift, and go to state 75
    Null   shift, and go to state 76
    '('    shift, and go to state 77
    '-'    shift, and go to state 78
    '!'    shift, and go to state 79

    EXP   go to state 148
    REXP  go to state 81
    AEXP  go to state 82
    MEXP  go to state 83
    SEXP  go to state 84
    PEXP  go to state 85


state 148

   27 EXP: EXP . eLogico REXP
   56 EXPS: EXPS ',' EXP .

    eLogico  shift, and go to state 99

    $default  reduce using rule 56 (EXPS)
